<?php
/**
 * @file
 * Code for the MOOC UX Defaults feature.
 */

include_once 'mooc_ux_defaults.features.inc';

/**
 * Implements hook_init().
 */
function mooc_ux_defaults_init() {
  global $user;
  $path = implode('/', arg());
  // hide advanced theming options for non super users
  if ($path == 'admin/appearance/settings/chamfer' && $user->uid != 1) {
    drupal_add_css(drupal_get_path('module', 'mooc_ux_defaults') .'/mooc_ux_defaults.css');
  }
}
/**
 * Implements hook_menu_breadcrumb_alter().
 */
function mooc_ux_defaults_menu_breadcrumb_alter(&$active_trail, $item) {
  // only do this in the node structure
  if (arg(0) == 'node') {
    // pop off home
    array_shift($active_trail);
    // optionally pop off another level of the outline
    array_shift($active_trail);
  }
}

/**
 * Implements hook_menu_alter(). Overrides the books outline page.
 *
 * @see book.module
 */
function mooc_ux_defaults_menu_alter(&$items) {
  // Remove outline tab.
  unset($items['node/%node/outline']);
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function mooc_ux_defaults_form_node_form_alter(&$form, &$form_state) {
  if ( isset($form['book'])) {
    // Hide book fieldset.
    $form['book']['#access'] = FALSE;
  }
}

/**
 * Implements hook_menu().
 */
function mooc_ux_defaults_menu() {
  $items = array();

  $items['admin/config/system/course-settings'] = array(
    'title' => 'Course settings',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mooc_ux_defaults_form'),
    'access callback' => 'mooc_ux_defaults_role_access',
    'access arguments' => array(array('administrator', 'instructor', 'staff')),
  );

  return $items;
}

/**
 * Access callback for user roles.
 */
function mooc_ux_defaults_role_access($roles) {
  global $user;
  foreach ($roles as $role) {
    if (in_array($role, $user->roles)) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Page callback for mooc_ux_defaults.
 */
function mooc_ux_defaults_form($form, $form_state) {
  $form = array();
  $form['site_information'] = array(
    '#tree' => '0',
    '#type' => 'fieldset',
    '#collapsed' => '0',
    '#collapsible' => '1',
    '#title' => t('Course Details'),
    '#weight' => '0',
  );
  $form['site_information']['site_name'] = array(
    '#description' => t('The name of the course being offered, typically a short name and number'),
    '#default_value' => variable_get('site_name', ''),
    '#weight' => '0',
    '#title' => t('Course name'),
    '#type' => 'textfield',
    '#required' => '1',
  );
  $form['site_information']['site_slogan'] = array(
    '#default_value' => variable_get('site_slogan', ''),
    '#weight' => '1',
    '#description' => t('Title of the course'),
    '#type' => 'textfield',
    '#title' => t('Course Title'),
    '#required' => '1',
  );
  $form['site_information']['site_frontpage'] = array(
    '#default_value' => variable_get('site_frontpage', 'node'),
    '#weight' => '2',
    '#description' => t('Home page for the course'),
    '#type' => 'textfield',
    '#title' => t('Course front page'),
    '#required' => '1',
  );
  return system_settings_form($form);
}

/**
 * Implements hook_profiler_builder_modules_list_alter().
 */
function mooc_ux_defaults_profiler_builder_modules_list_alter(&$list) {
  // don't enable these developer toolsets
  $disable = array(
    'features_tools',
    'devel',
    'mooc',
  );
  // loop through and disable projects listed above
  foreach ($disable as $project) {
    if (isset($list[$project])) {
      unset($list[$project]);
    }
  }
}
/**
 * Implements hook_profiler_builder_ignore_alter().
 */
function mooc_ux_defaults_profiler_builder_ignore_alter(&$ignore_list) {
  // additional known things to ignore for variables
  $ignore = array(
    'color_chamfer_stylesheets',
    'theme_chamfer_settings',
    'color_chamfer_logo',
    'color_chamfer_files',
    'user_mail_cancel_confirm_body',
    'user_mail_status_canceled_subject',
    'user_mail_status_canceled_body',
    'user_mail_cancel_confirm_body',
    'user_mail_cancel_confirm_subject',
    'user_mail_password_reset_body',
    'user_mail_password_reset_subject',
    'user_mail_register_admin_created_body',
    'user_mail_register_admin_created_subject',
    'user_mail_register_no_approval_required_body',
    'user_mail_register_no_approval_required_subject',
    'user_mail_register_pending_approval_body',
    'user_mail_register_pending_approval_subject',
    'user_mail_status_blocked_body',
    'user_mail_status_blocked_subject',
    'user_mail_status_activated_subject',
    'user_mail_status_activated_body',
    'user_mail_status_activated_notify',
    'site_name',
    'site_slogan',
    'site_frontpage',
    'outline_designer_page_icon',
  );
  // merge these items in to have them ignored
  $ignore_list = array_merge($ignore_list, $ignore);
}