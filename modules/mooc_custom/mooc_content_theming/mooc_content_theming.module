<?php
/**
 * @file
 * Code for the MOOC content theming feature.
 */

include_once 'mooc_content_theming.features.inc';

/**
 * Implements hook_block_info().
 */
function mooc_content_theming_block_info() {
  $blocks['mooc_content_theming_banner'] = array(
    'info' => t('MOOC content banner'),
    'cache' => DRUPAL_CACHE_PER_PAGE
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function mooc_content_theming_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'mooc_content_theming_banner':
      $block['subject'] = '<none>';
      $block['content'] = _mooc_content_theming_banner_block();
    break;
  }
  return $block;
}

/**
 * Callback for the banner block.
 */
function _mooc_content_theming_banner_block() {
  // try to get node from active menu item
  $node = menu_get_object();
  if (isset($node->book)) {
    // easiest use-case, this has a banner image
    if (isset($node->field_mooc_image) && !empty($node->field_mooc_image)) {
      $image_uri = $node->field_mooc_image['und'][0]['uri'];
      return theme('image', array(
        'path' => $image_uri,
        'alt' => strip_tags($node->title . ' ' . t('banner')),
        'title' => strip_tags($node->title),
        'attributes' => array(
          'class' => array('logo'),
        ),
      ));
    }
    else {
      // spider back up through parents til we find a match
      $plid = $node->book['plid'];
      while ($plid != 0) {
        $pmenu = book_link_load($plid);
        $parent = node_load($pmenu['nid']);
        // check that it has the image field set
        if (empty($parent->field_mooc_image)) {
          // keep going
          $plid = $parent->book['plid'];
        }
        else {
          // use this one, we always use the closest parent we find
          $image_uri = $parent->field_mooc_image['und'][0]['uri'];
          return theme('image', array(
            'path' => $image_uri,
            'alt' => strip_tags($parent->title . ' ' . t('banner')),
            'title' => strip_tags($parent->title),
            'attributes' => array(
              'class' => array('logo'),
            ),
          ));
        }
      }
    }
  }
  return NULL;
}

/**
 * Implements hook_foundation_access_menu_item_icon_alter().
 */
function mooc_content_theming_foundation_access_menu_item_icon_alter(&$icon, $element) {
  // check for this being a node
  if (strpos($element['#href'], 'node/') === 0) {
    $nid = str_replace('node/', '', $element['#href']);
    if (is_numeric($nid)) {
      $node = node_load($nid);
      if ($node) {
        // see if we have a instructionally significant icon
        if (isset($node->field_instructional_significance['und'][0]['value'])) {
          $icon = $node->field_instructional_significance['und'][0]['value'];
        }
        elseif (isset($node->field_mooc_container_type['und'][0]['value'])) {
          $icon = 'content';
        }
      }
    }
  }
}

/**
 * Implements hook_foundation_access_colors_alter().
 */
function mooc_content_theming_foundation_access_colors_alter(&$color, $current) {
  $node = menu_get_object('node');
  // allow pages to pass their styling down
  if (isset($node) && $node->type == 'page' && isset($node->{'field_fa_' . $current . '_color'})) {
    if (!empty($node->{'field_fa_' . $current . '_color'})) {
      $color = $node->{'field_fa_' . $current . '_color'}[LANGUAGE_NONE][0]['jquery_colorpicker'];
    }
    elseif (isset($node->book)) {
      // spider back up through parents til we find a match
      $plid = $node->book['plid'];
      while ($plid != 0) {
        $pmenu = book_link_load($plid);
        $parent = node_load($pmenu['nid']);
        // check that it has the image field set
        if (empty($parent->{'field_fa_' . $current . '_color'})) {
          // keep going
          $plid = $parent->book['plid'];
        }
        else {
          // use this one, we always use the closest parent we find
          $color = $parent->{'field_fa_' . $current . '_color'}[LANGUAGE_NONE][0]['jquery_colorpicker'];
          $plid = 0;
        }
      }
    }
  }
}

