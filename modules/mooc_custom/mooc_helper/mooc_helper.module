<?php
/**
 * Implements hook_init().
 */
function mooc_helper_init() {
  // add css related to mooc helper instance
  drupal_add_css(drupal_get_path('module', 'mooc_helper') . '/css/mooc_helper.css');
}

/**
 * Implements hook_menu().
 */
function mooc_helper_connection_menu() {
  $items = array();
  // Callback to load correct instructional outline
  $items['inst-outline'] = array(
    'title' => 'Instructional outline',
    'page callback' => '_cis_connector_transaction',
    'page arguments' => array(0),
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Return a list of all book roots as an array
 */
function _mooc_helper_all_book_outlines() {
  $outlines = array();
  // load all book outline etids
  foreach (book_get_books() as $book_id => $book) {
    // load book node fully
    $node = node_load($book['nid']);
    // create an array
    $outlines[$node->uuid] = $node->book['link_title'];
  }
  return $outlines;
}

/**
 * Implements hook_set_cis_service_data().
 */
function mooc_helper_set_cis_service_data($delta) {
  switch ($delta) {
    case 'initial':
    case 'interval':
      // report the outlines available, updated at the interval and first time
      $data = array(
        'field_service_data' => drupal_json_encode(_mooc_helper_all_book_outlines()),
      );
    break;
  }
  return $data;
}